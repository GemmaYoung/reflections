1. When would you want to create a remote repository rather than keeping all your work local?

I want to share my work to other persons I wil create a remote to my local repository.

2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because I want to pull changes from remote only when the changes occured on the remote have enough meaning, which means there are
often multiple commits to update. If automatically pulling, GitHub will not be able to recognize when or not to pull.

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?

Branches happened inside a repository. Clones are used to copy an existing repository whether or not from GitHub to local. 
Forks is also copying an existing reposity otherwise in GitHub Server instead of local.

4. What is the benefit of having a copy of the last known state of the remote stored locally?
This will help to deal with conflict between local repository and its responding remote.

5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
We would use SVN to collaborate with each other. Learning curve for SVN would be easier. But if any of us isn't connected to 
the remote repository, working with Git will be easier.

6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When I want to make another version of the current master but still keeping the master growing on itself, or I am collaborating with
other people to negotiate unready changes intent to commit on the master. Work flow will be more complicated if making changes in seperate branches.
But it make collaboration and negotiation on changes more reasonable.